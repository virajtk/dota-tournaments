{"version":3,"sources":["components/register/Register.jsx","components/addTournament/AddTournament.jsx","components/joinTournament/JoinTournament.jsx","components/home/Home.jsx","components/login/Login.jsx","components/navigator/Navigator.jsx","App.jsx","serviceWorker.js","index.js","images/icon.png","images/slide1.jpg","images/slide2.jpg","images/slide3.jpg"],"names":["Register","props","onSubmitHandler","e","preventDefault","postData","onChangeHandler","target","name","value","setState","state","fullName","userName","password","confirmPassword","email","contactNo","steamURL","redirect","fetch","method","headers","Accept","body","JSON","stringify","this","result","alert","console","log","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","setTimeout","bind","message","to","className","autoComplete","onSubmit","htmlFor","type","fullname","onChange","required","username","Component","AddTournament","onChangeDate","date","title","gamemode","description","pricepool","Date","time","server","id","role","aria-labelledby","placeholder","rows","selected","JoinTournament","handleSelectedPlace","tournamentID","window","sessionStorage","setItem","itemList","then","res","json","map","item","key","_id","onClick","src","alt","href","fadeProperties","duration","transitionDuration","infinite","indicators","Home","newsList","slideshow1","slideshow2","slideshow3","style","color","news","Login","login","response","error","localStorage","userid","userFullName","storeCollector","location","reload","active","parse","getItem","defaultChecked","event","data-type","defaultValue","Navigator","logoutAction","activeUser","clear","isLoaded","user","hiddenUser","hiddenGuest","LogedUserID","icon","width","height","loading","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","activeStyle","fontWeight","hidden","backgroundColor","disabled","path","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.61844c5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./registerStyles.css\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullName: \"\",\r\n      userName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      email: \"\",\r\n      contactNo: \"\",\r\n      steamURL: \"\",\r\n      redirect: null,\r\n    };\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    // alert(JSON.stringify(this.state));\r\n    this.postData();\r\n  };\r\n\r\n  async postData() {\r\n    try {\r\n      let result = await fetch(\"http://localhost:5000/user\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(this.state),\r\n      });\r\n      alert(JSON.stringify(this.state))\r\n      console.log(\"Result: \" + result);\r\n      toast.info(\"✔️ Account Added Susseccfully !\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      setTimeout(\r\n        function () {\r\n          //Start the timer\r\n          this.setState({ redirect: \"/login\" }); //After 3 second, set redirect to true\r\n        }.bind(this),\r\n        3500\r\n      );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <section className=\"register-block\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 register-sec\">\r\n                <h2 className=\"text-center\">Register Now</h2>\r\n                <form\r\n                  className=\"register-form\"\r\n                  autoComplete=\"off\"\r\n                  onSubmit={this.onSubmitHandler}\r\n                >\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputName1\">Full Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"fullName\"\r\n                      value={this.state.fullname}\r\n                      onChange={this.onChangeHandler}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputAddress1\">User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      className=\"form-control\"\r\n                      value={this.state.username}\r\n                      onChange={this.onChangeHandler}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputAddress2\">Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputTown1\">Confirm Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"confirmPassword\"\r\n                      value={this.state.confirmPassword}\r\n                      onChange={this.onChangeHandler}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputCountry1\">E-mail</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPostCode1\">\r\n                      Contact Number\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      name=\"contactNo\"\r\n                      value={this.state.contactNo}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputUsername\">\r\n                      Steam Profile URL\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"steamURL\"\r\n                      value={this.state.steamURL}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-check\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-register float-right\"\r\n                    >\r\n                      SIGN UP\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div className=\"col-md-8 banner-sec\"></div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./addTournamentStyles.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass AddTournament extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      gamemode: \"\",\r\n      description: \"\",\r\n      pricepool: \"\",\r\n      date: new Date(),\r\n      time: \"\",\r\n      server: \"\",\r\n    };\r\n  }\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    // alert(JSON.stringify(this.state));\r\n    this.postData();\r\n  };\r\n\r\n  async postData() {\r\n    try {\r\n      let result = await fetch(\"http://localhost:5000/tournament\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(this.state),\r\n      });\r\n      console.log(\"Result: \" + result);\r\n      toast.info(\"✔️ Tournament Added Susseccfully !\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n        setTimeout(\r\n          function () {\r\n            //Start the timer\r\n            this.setState({ redirect: \"/jointour\" }); //After 3 second, set redirect to true\r\n          }.bind(this),\r\n          3500\r\n        );\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  }\r\n\r\n  onChangeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onChangeDate = (date) => {\r\n      this.setState({\r\n          date:date\r\n      })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"container register\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3 register-left\">\r\n              {/* <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" /> */}\r\n              <h3>Create your own Tournament.</h3>\r\n              <br />\r\n            </div>\r\n            <div className=\"col-md-9 register-right\">\r\n              <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div\r\n                  className=\"tab-pane fade show active\"\r\n                  id=\"home\"\r\n                  role=\"tabpanel\"\r\n                  aria-labelledby=\"home-tab\"\r\n                >\r\n                  <h3 className=\"register-heading\">Add a Tournament</h3>\r\n                  <form onSubmit={this.onSubmitHandler} autoComplete=\"off\">\r\n                    <div className=\"row register-form\">\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Title\"\r\n                            name=\"title\"\r\n                            value={this.state.title}\r\n                            onChange={this.onChangeHandler}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"gamemode\"\r\n                            value={this.state.gamemode}\r\n                            onChange={this.onChangeHandler}\r\n                          >\r\n                            <option>Select Game Mode</option>\r\n                            <option>All Pick</option>\r\n                            <option>Captain Mode</option>\r\n                            <option>1v1 Mid Only</option>\r\n                            <option>2v2 Mid Only</option>\r\n                            <option>Captain Draft</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChangeHandler}\r\n                            rows=\"1\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Price Pool (USD)\"\r\n                            name=\"pricepool\"\r\n                            value={this.state.pricepool}\r\n                            onChange={this.onChangeHandler}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <DatePicker\r\n                            className=\"datepicker\"\r\n                            name=\"date\"\r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Time (13:10)\"\r\n                            name=\"time\"\r\n                            value={this.state.time}\r\n                            onChange={this.onChangeHandler}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            className=\"form-control\"\r\n                            name=\"server\"\r\n                            value={this.state.server}\r\n                            onChange={this.onChangeHandler}\r\n                          >\r\n                            <option>Select Server</option>\r\n                            <option>SE Asia</option>\r\n                            <option>Europe</option>\r\n                            <option>US</option>\r\n                            <option>Africa</option>\r\n                            <option>Other</option>\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <input\r\n                            type=\"submit\"\r\n                            className=\"btnRegister\"\r\n                            value=\"Create\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTournament;\r\n","import React, { Component } from \"react\";\r\nimport \"./joinTournamentStyles.css\";\r\n// import coverImg from \"../../images/background.png\";\r\n\r\nclass JoinTournament extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      itemList: [],\r\n      redirect: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5000/tournament/\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          itemList: json,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleSelectedPlace = (tournamentID) => {\r\n    window.sessionStorage.setItem(\"tournamentID:\", tournamentID);\r\n    this.setState({ redirect: \"/selected-tournament\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"cardbackground\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                {this.state.itemList.map((item) => (\r\n                  <div\r\n                    className=\"col-12 col-md-6 col-lg-4\"\r\n                    key={item._id}\r\n                    onClick={this.handleSelectedPlace.bind(this, item._id)}\r\n                  >\r\n                    <div className=\"card\">\r\n                      <img\r\n                        className=\"card-img-top\"\r\n                        src=\"https://wallpapercart.com/wp-content/uploads/2020/05/Hd-Dota-2-Video-Game-Wallpaper-Background-Image0013-.jpg\"\r\n                        alt=\"Card cap\"\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">\r\n                          <a href=\"product.html\" title=\"View Product\">\r\n                            {item.title}\r\n                          </a>\r\n                        </h4>\r\n                        <p className=\"card-text\">{item.description}</p>\r\n                        <div className=\"row\">\r\n                          <div className=\"col\">\r\n                            <a href=\"/\" className=\"btn btn-danger btn-block\">\r\n                              Favourite\r\n                            </a>\r\n                          </div>\r\n                          <div className=\"col\">\r\n                            <a href=\"/\" className=\"btn btn-success btn-block\">\r\n                              Join\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JoinTournament;\r\n","import React, { Component } from \"react\";\r\nimport { Fade } from \"react-slideshow-image\";\r\nimport \"./homeStyles.css\";\r\nimport slideshow1 from \"../../images/slide1.jpg\";\r\nimport slideshow2 from \"../../images/slide2.jpg\";\r\nimport slideshow3 from \"../../images/slide3.jpg\";\r\n\r\nconst fadeProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n};\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newsList: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:5000/news/\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          newsList: json,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <br/>\r\n        <div className=\"slide-container\">\r\n          <Fade {...fadeProperties}>\r\n            <div className=\"each-fade\">\r\n              <div className=\"image-container\">\r\n                <img src={slideshow1} alt=\"Slide 1\" />\r\n              </div>\r\n              <h2>1</h2>\r\n            </div>\r\n            <div className=\"each-fade\">\r\n              <div className=\"image-container\">\r\n                <img src={slideshow2} alt=\"Slide 2\" />\r\n              </div>\r\n              <h2>2</h2>\r\n            </div>\r\n            <div className=\"each-fade\">\r\n              <div className=\"image-container\">\r\n                <img src={slideshow3} alt=\"Slide 3\" />\r\n              </div>\r\n              <h2>3</h2>\r\n            </div>\r\n          </Fade>\r\n        </div>\r\n        <div className=\"content\">\r\n          <h2 style={{ color: \"white\" }}>News Feeds And Patch Notes</h2>\r\n          <br />\r\n          {this.state.newsList.map((news) => (\r\n            <div className=\"card\" key={news._id}>\r\n              <div className=\"card-header\">{news.type}</div>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{news.title}</h5>\r\n                <p className=\"card-text\">{news.description}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport \"./loginStyles.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: null,\r\n      password: null,\r\n      login: false,\r\n      active: null,\r\n      redirect: null,\r\n    };\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    let LOGIN_API = \"http://localhost:5000/login/user\";\r\n    fetch(LOGIN_API, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        userName: this.state.userName,\r\n        password: this.state.password,\r\n      }),\r\n    }).then((response) => {\r\n      response.json().then((result) => {\r\n        console.log(\"result\", result);\r\n        if (result.message) {\r\n          // console.log(\"No User Found\")\r\n          this.setState({\r\n            userName:\"\",\r\n            password:\"\"\r\n          });\r\n          toast.error(\"🚫 User Not Found, UserName/Password does not Match\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          });\r\n        }\r\n        if (result && result._id) {\r\n          localStorage.setItem(\r\n            \"login\",\r\n            JSON.stringify({\r\n              login: true,\r\n              userName: result.userName,\r\n              userid: result._id,\r\n            })\r\n          );\r\n          let userFullName = result.fullName;\r\n\r\n          toast.info(\r\n            \"✔️ Welcome \" + userFullName + \", You're Loged In Succesfully !\",\r\n            {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n            }\r\n          );\r\n        }\r\n\r\n        setTimeout(\r\n          function () {\r\n            //Start the timer\r\n            this.storeCollector(); //After 2 second\r\n            window.location.reload(false);\r\n          }.bind(this),\r\n          2000\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.storeCollector();\r\n  }\r\n\r\n  storeCollector() {\r\n    let active = JSON.parse(localStorage.getItem(\"login\"));\r\n    if (active && active.login) {\r\n      this.setState({\r\n        login: true,\r\n        active: active,\r\n        redirect: \"/\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <ToastContainer />\r\n        <div className=\"login-wrap\">\r\n          <div className=\"login-html\">\r\n            <input\r\n              id=\"tab-1\"\r\n              type=\"radio\"\r\n              name=\"tab\"\r\n              className=\"sign-in\"\r\n              defaultChecked\r\n            />\r\n            <label htmlFor=\"tab-1\" className=\"tab\">\r\n              Sign In\r\n            </label>\r\n            <input id=\"tab-2\" type=\"radio\" name=\"tab\" className=\"for-pwd\" />\r\n            <label htmlFor=\"tab-2\" className=\"tab\">\r\n              Forgot Password\r\n            </label>\r\n            <div className=\"login-form\">\r\n              {/* Login */}\r\n              <form\r\n                autoComplete=\"off\"\r\n                onSubmit={(e) => {\r\n                  this.login(e);\r\n                }}\r\n              >\r\n                <div className=\"sign-in-htm\">\r\n                  <div className=\"group\">\r\n                    <label htmlFor=\"user\" className=\"label\">\r\n                      Username\r\n                    </label>\r\n                    <input\r\n                      id=\"user\"\r\n                      type=\"text\"\r\n                      className=\"input\"\r\n                      name=\"userName\"\r\n                      onChange={(event) => {\r\n                        this.setState({ userName: event.target.value });\r\n                      }}\r\n                      value={this.state.userName}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"group\">\r\n                    <label htmlFor=\"pass\" className=\"label\">\r\n                      Password\r\n                    </label>\r\n                    <input\r\n                      id=\"pass\"\r\n                      type=\"password\"\r\n                      className=\"input\"\r\n                      data-type=\"password\"\r\n                      name=\"password\"\r\n                      onChange={(event) => {\r\n                        this.setState({ password: event.target.value });\r\n                      }}\r\n                      value={this.state.password}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"group\">\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"button\"\r\n                      defaultValue=\"Sign In\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"hr\" />\r\n                </div>\r\n              </form>\r\n              {/* Fogot Pass */}\r\n              <div className=\"for-pwd-htm\">\r\n                <div className=\"group\">\r\n                  <label htmlFor=\"user\" className=\"label\">\r\n                    Username or Email\r\n                  </label>\r\n                  <input id=\"user\" type=\"text\" className=\"input\" />\r\n                </div>\r\n                <div className=\"group\">\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"button\"\r\n                    defaultValue=\"Reset Password\"\r\n                  />\r\n                </div>\r\n                <div className=\"hr\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport icon from \"../../images/icon.png\";\r\nimport \"./navigatorStyles.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// Components\r\nimport Register from \"../register/Register\";\r\nimport AddTournament from \"../addTournament/AddTournament\";\r\nimport JoinTournament from \"../joinTournament/JoinTournament\";\r\nimport Home from \"../home/Home\";\r\nimport Login from \"../login/Login\";\r\n\r\nclass Navigator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      user: [],\r\n      redirect: null,\r\n      login: false,\r\n      hiddenUser: true,\r\n      hiddenGuest: true,\r\n    };\r\n  }\r\n\r\n  logoutAction = () => {\r\n    this.setState({\r\n      activeUser: [],\r\n    });\r\n    window.localStorage.clear();\r\n    window.sessionStorage.clear();\r\n    // alert(this.state.activeUser);\r\n    \r\n\r\n    toast.info(\"✔️ You're Succesfully Loged Out\", {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    setTimeout(\r\n      function () {\r\n        //Start the timer\r\n        alert(this.state.activeUser);\r\n      }.bind(this),\r\n      3000\r\n    );\r\n  };\r\n\r\n  componentDidMount() {\r\n    let active = JSON.parse(localStorage.getItem(\"login\"));\r\n    if (active && active.login) {\r\n      this.setState({\r\n        login: true,\r\n        hiddenGuest:true,\r\n        hiddenUser:false\r\n      });\r\n\r\n      const LogedUserID = active.userid;\r\n      fetch(\"http://localhost:5000/user/\" + LogedUserID)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            user: json,\r\n          });\r\n          window.sessionStorage.setItem(\"activeUserID:\", this.state.user._id);\r\n        });\r\n    } else {\r\n      this.setState({\r\n        activeUser: [],\r\n        hiddenGuest:false,\r\n        hiddenUser:true\r\n      });\r\n      window.localStorage.clear();\r\n      window.sessionStorage.clear();\r\n      // alert(this.state.activeUser);\r\n      // this.props.history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <ToastContainer />\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              <img\r\n                src={icon}\r\n                width={30}\r\n                height={30}\r\n                className=\"d-inline-block align-top\"\r\n                alt=\"\"\r\n                loading=\"lazy\"\r\n              />\r\n              DOTA 2 Tournaments\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/\"\r\n                    exact\r\n                    activeStyle={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <span>Home </span>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item \" hidden={this.state.hiddenUser}>\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/addtour\"\r\n                    exact\r\n                    activeStyle={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <span>Create Tournament{\"  \"}</span>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item \" hidden={this.state.hiddenUser}>\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    to=\"/jointour\"\r\n                    exact\r\n                    activeStyle={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <span>Join Tournament{\"  \"}</span>\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n              <form className=\"form-inline my-2 my-lg-0\">\r\n                <input\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    backgroundColor: \"black\",\r\n                    color: \"white\",\r\n                  }}\r\n                  id=\"dashName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.user.fullName}\r\n                  disabled\r\n                  hidden={this.state.hiddenUser}\r\n                />\r\n              </form>\r\n              <form className=\"form-inline my-2 my-lg-0\">\r\n                <button\r\n                  className=\"btn btn-outline-primary my-2 my-sm-0\"\r\n                  type=\"submit\"\r\n                  hidden={this.state.hiddenGuest}\r\n                >\r\n                  <NavLink\r\n                    className=\"nav-link anchortag\"\r\n                    to=\"/login\"\r\n                    exact\r\n                    activeStyle={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <span>Sign In</span>\r\n                  </NavLink>\r\n                </button>\r\n              </form>\r\n              <form className=\"form-inline my-2 my-lg-0\">\r\n                <button\r\n                  className=\"btn btn-outline-success my-2 my-sm-0\"\r\n                  type=\"submit\"\r\n                  hidden={this.state.hiddenGuest}\r\n                >\r\n                  <NavLink\r\n                    className=\"nav-link anchortag\"\r\n                    to=\"/sign\"\r\n                    exact\r\n                    activeStyle={{ color: \"white\", fontWeight: \"bold\" }}\r\n                  >\r\n                    <span>Sign Up</span>\r\n                  </NavLink>\r\n                </button>\r\n              </form>\r\n              <form onSubmit={this.logoutAction} className=\"form-inline my-2 my-lg-0\">\r\n                <button\r\n                  className=\"btn btn-outline-danger my-2 my-sm-0\"\r\n                  type=\"submit\"\r\n                  hidden={this.state.hiddenUser}\r\n                >\r\n                  \r\n                    <span>Sign Out</span>\r\n                  \r\n                </button>\r\n              </form>\r\n            </div>\r\n          </nav>\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/addtour\" exact>\r\n              <AddTournament />\r\n            </Route>\r\n            <Route path=\"/jointour\" exact>\r\n              <JoinTournament />\r\n            </Route>\r\n            <Route path=\"/login\" exact>\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/sign\" exact>\r\n              <Register />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navigator from \"./components/navigator/Navigator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.c1ecda47.png\";","module.exports = __webpack_public_path__ + \"static/media/slide1.a2a2a0d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide2.92ee0687.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide3.a5a84499.jpg\";"],"sourceRoot":""}